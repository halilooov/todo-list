declare function tryRequire(id: string, rootDir?: string): any;
declare function tryResolve(id: string, rootDir?: string): string;
declare function tryImport(id: string, rootDir?: string): Promise<ExportConfig>;
declare function main(): Promise<void>;
declare function transformFileName(file: string): {
    fileName: string;
    fileType: string;
};
declare type CustomImport = (fileName: string, file: string, fileType: string) => string;
interface Config {
    targetDir: string;
    outputDir?: string;
    customImport?: CustomImport;
    depth?: boolean;
    autoPrefix?: boolean;
}
interface ExportConfig {
    configs: Array<Config>;
}
declare function defineExportConfig(config: ExportConfig): ExportConfig;

export { ExportConfig, defineExportConfig, main, transformFileName, tryImport, tryRequire, tryResolve };
